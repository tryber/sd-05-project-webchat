<!DOCTYPE html>
<html lang="pt-br">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="stylesheet"
      href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
      integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"
      crossorigin="anonymous"
    />
    <title>Socket io</title>
    <style>
      #mensagensContainer {
        height: 300px;
      }
      .userLeft {
        color: red;
      }
    </style>
  </head>

  <body>
    <div class="d-flex flex-row justify-content-around">
      <div class="col-md-8">
        <h1 class="text-center">Chat</h1>
        <div id="status"></div>
        <div class="chat">
          <div class="nickname flex">
            <input
              data-testid="nickname-box"
              placeholder="Digite seu nickname"
              type="text"
              id="newNicknameInput"
              class="form-control"
              onfocus="this.value=''"
            />
            <button
              class="btn btn-success"
              data-testid="nickname-save"
              id="saveNickname"
            >
              Save
            </button>
          </div>
          <div class="card">
            <div id="mensagensContainer" class="card-block">
              <ul id="messageBox">
                <% if(formatMessage) {
                  formatMessage.forEach(each => {
                    %>
                    <li data-testid="message"><%=each%></li>
                    <%
                  })
                }
                %>
              </ul>
            </div>
          </div>
          <br />
          <textarea
            data-testid="message-box"
            id="newMessage"
            class="form-control"
            placeholder="Digite sua mensagem"
          ></textarea>
          <button class="btn btn-warning" data-testid="send-button" id="send">
            Enviar
          </button>
        </div>
      </div>
      <div class="col-md-2 usuarios">
        <ul id="users">
          <% if(usersOnline) {
            usersOnline.forEach(each => {
              %>
                <li data-testid="online-user" id=<%= each.userId %>><%=each.nickName%></li>
              <%
            })
          }
          %>
        </ul>
      </div>
    </div>

    <script src="http://localhost:3000/socket.io/socket.io.js"></script>
    <script>
      const socket = io();

      const nickNameInput = document.querySelector('#newNicknameInput');
      const saveNicknameButton = document.querySelector('#saveNickname');
      const newMessageText = document.querySelector('#newMessage');
      const sendMessageButton = document.querySelector('#send');
      let userNickname;
      let id;

      sendMessageButton.addEventListener('click', (e) => {
        e.preventDefault();
        socket.emit('message', {
          chatMessage: newMessageText.value,
          nickname: userNickname,
        });
        newMessageText.value = '';
      });

      saveNicknameButton.addEventListener('click', (e) => {
        e.preventDefault();
        userNickname = nickNameInput.value;
        nickNameInput.value = '';

        const li = document.getElementById(id);
        li.innerHTML = userNickname;
        socket.emit('changeNick', userNickname, id);
      });

      const newMessage = (message) => {
        const messageUl = document.querySelector('#messageBox');
        const li = document.createElement('li');
        li.setAttribute('data-testid', 'message');
        li.innerText = message;
        messageUl.appendChild(li);
      };

      socket.on('user', (nickname, userId) => {
        userNickname = nickname;
        id = userId;
      });

      socket.on('changeNick', (obj) => {
        const li = document.getElementById(obj.id);
        li.innerText = obj.nick;
      })

      socket.on('connection', (nickName, userId) => {
        const ul = document.querySelector('#users');
        const li = document.createElement('li');
        li.setAttribute('data-testid', 'online-user');
        li.setAttribute('id', userId);
        li.innerText = nickName;
        ul.appendChild(li);
      })

      socket.on('userDisconnected', (userId) => {
        const li = document.getElementById(userId);
        li.remove();
      })

      socket.on('message', (message) => newMessage(message));
    </script>
  </body>
</html>
