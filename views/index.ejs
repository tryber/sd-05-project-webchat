<!DOCTYPE html>
<html>
  <head>
    <title>Socket.IO chat</title>
    <style>
      body { margin: 0; padding-bottom: 3rem; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif; }

      #form { background: rgba(0, 0, 0, 0.15); padding: 0.25rem; position: fixed; bottom: 0; left: 0; right: 0; display: flex; height: 3rem; box-sizing: border-box; backdrop-filter: blur(10px); }
      #input { border: none; padding: 0 1rem; flex-grow: 1; border-radius: 2rem; margin: 0.25rem; }
      #input:focus { outline: none; }
      #form > button { background: #333; border: none; padding: 0 1rem; margin: 0.25rem; border-radius: 3px; outline: none; color: #fff; }

      #messages { list-style-type: none; margin: 0; padding: 0; }
      #messages > li { padding: 0.5rem 1rem; }
      #messages > li:nth-child(odd) { background: #efefef; }
    </style>
  </head>
  <body>
    <ul id="online-users-list">
      <% if(usersOnline !== []) { %>
        <% usersOnline.forEach((user) => { %>
          <li data-testid="online-user" id=<%= `${user.socketId}` %> ><%= `${user.nickname}` %></li>
        <% }) %>
      <% } %>
    </ul>
    <ul id="messages">
    <% if (messages) { %>
      <% messages.forEach((message) => { %>
        <li data-testid="message">
          <%= `${message.timestamp} - ${message.nickname}: ${message.chatMessage}` %>
        </li>
     <% }) %>
    <% } %>
  </ul>
    <form id="form" action="">
      <input data-testid="nickname-box" id="nickname" type="text" />
      <button data-testid="nickname-save" id="save-nickname">Save</button>
      <input data-testid="message-box" id="input" autocomplete="off" />
      <button data-testid="send-button">Send</button>
    </form>
  </body>
  <script src="https://cdn.socket.io/socket.io-3.0.1.min.js"></script>
  <script>
    const client = io();

    const form = document.getElementById('form');
    const input = document.getElementById('input');
    const nickname = document.getElementById('nickname');
    const messages = document.getElementById('messages');
    const onlineUsers = document.getElementById('online-users-list');

    form.addEventListener('submit', function(e) {
      e.preventDefault();
      if (nickname.value && input.value) {
        client.emit('message', { nickname: nickname.value, chatMessage: input.value })
        input.value = '';
      }
    });

    document.getElementById('save-nickname').addEventListener('click', function(e) {
      e.preventDefault();
      if (nickname.value) {
        client.emit('updateNickname', nickname.value )
      }
    });

    client.on('updateNickname', (nick, id) => {
      const liToChange = document.getElementById(id);
      liToChange.innerHTML = nick;
    });

    /* client.emit('userLoggedIn', nickname.value); */

    let currentId = '';
      client.on('saveCurrentId', (id) => {
      currentId = id;
    });

    client.on('usersList', (nickname, socketId) => {
      const li = document.createElement('li');
      li.setAttribute('data-testid', 'online-user');
      li.setAttribute('id', `${socketId}`);
      li.textContent = nickname;
      // logica de prepend e append vista no repo da Juliette Beaudett
        if (socketId === currentId) {
          onlineUsers.prepend(li);
      } else {
          onlineUsers.append(li);
      }
    });

    client.on('message', (msg) => {
      const li = document.createElement('li');
      li.setAttribute('data-testid', 'message');
      li.textContent = msg;
      messages.appendChild(li);
      window.scrollTo(0, document.body.scrollHeight);
    });

    client.on('userDisconnected', (id) => {
      const disconnectedUser = document.getElementById(id);
      console.log(disconnectedUser)
      disconnectedUser.remove();
    });
  </script>
</html>